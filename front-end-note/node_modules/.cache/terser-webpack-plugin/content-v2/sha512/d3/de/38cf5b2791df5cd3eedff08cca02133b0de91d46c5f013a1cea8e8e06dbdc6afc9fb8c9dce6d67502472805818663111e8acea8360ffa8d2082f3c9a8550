{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{375:function(t,a,e){\"use strict\";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"异步更新\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#异步更新\"}},[t._v(\"#\")]),t._v(\" 异步更新\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_1、异步更新原理\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、异步更新原理\"}},[t._v(\"#\")]),t._v(\" 1、异步更新原理\")]),t._v(\" \"),e(\"p\",[t._v(\"响应式数据对象中并不是每一次 setter 方法被触发都会立即修改 DOM ，更新视图。\\nVue 在侦听到数据变化（setter 方法被触发）后对应的 watcher 会被加入一个队列，并在下一次事件循环（nextTick）中调用该队列中所有 watcher 对象的方法进行视图渲染，相比同步更新避免了不必要的计算与 DOM 操作，减少了性能开销。\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"如果同一个 watcher 被多次触发，只会被推入到队列中一次。\")])]),t._v(\" \"),e(\"p\",[t._v(\"例如，当你设置 vm.someData = 'new value'，该组件不会立即重新渲染。当刷新队列时，组件会在下一个事件循环“tick”中更新。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_2、vue-nexttick\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、vue-nexttick\"}},[t._v(\"#\")]),t._v(\" 2、Vue.nextTick\")]),t._v(\" \"),e(\"p\",[t._v(\"在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[t._v(\"Vue\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"nextTick\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// DOM 更新了\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"Vue 通过 Promise.then、MutationObserver 和 setImmediate 实现 nextTick 方法，如果执行环境不支持，则会采用 setTimeout(fn, 0) 代替。\")])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}